name: E-Commerce CD

on:
  workflow_run:
    workflows: ["E-Commerce CI"]
    types: [completed]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download published wheel artifact
        uses: actions/download-artifact@v4
        with:
          name: dist-artifacts
          path: dist

      - name: Locate wheel file
        id: wheel
        run: |
          WHEEL=$(ls dist/*.whl | head -n1)
          echo "wheel=$WHEEL" >> $GITHUB_OUTPUT
          echo "wheel_name=$(basename "$WHEEL")" >> $GITHUB_OUTPUT

      - name: Configure AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1

      - name: Generate cloud-config
        run: |
          cat > cloud-config.yaml <<'EOF'
          #cloud-config
          users:
            - name: ubuntu
              shell: /bin/bash
              groups: [sudo]
              sudo: ["ALL=(ALL) NOPASSWD:ALL"]
              ssh_authorized_keys:
                - ssh-rsa AAAAB3... taher@macbook
          package_update: true
          packages:
            - python3
            - python3-venv
            - python3-pip
          EOF

      - name: Launch EC2 instance
        id: ec2
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0360c520857e3138f \
            --instance-type t3.micro \
            --security-group-ids sg-0bb418deecfe5ba5f \
            --subnet-id subnet-036e3bffe11c6d11c \
            --user-data file://cloud-config.yaml \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=my-flaskapp}]' \
            --query "Instances[0].InstanceId" --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID
          IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID \
            --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
          echo "IP=$IP" >> $GITHUB_ENV
          echo "EC2 instance ready: $INSTANCE_ID ($IP)"

      - name: Copy wheel to EC2 (SCP)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.IP }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "dist/${{ steps.wheel.outputs.wheel_name }}"
          target: "/tmp/"
          overwrite: true
