name: E-Commerce CI

on:
  push:
    branches:
      - main
      - dev
      - 'feature/**'
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch: {}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install linters
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort mypy

     ## - name: Run flake8
      #   run: flake8 .

      # - name: Run black check
      #   run: black --check .

      # - name: Run isort check
      #   run: isort --check-only .

      # - name: Run mypy
      #   run: mypy .

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: |
            requirements.txt
            requirements-dev.txt

      - name: Install test dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run Unit Tests
        run: pytest tests/ -v --tb=short

      - name: Run Integration Tests
        run: pytest tests/integration/ -v --tb=short

  build:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  publish:
    name: Build & Publish Python Package to Azure DevOps Feed
    runs-on: ubuntu-latest
    needs: [tests] 
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package (sdist + wheel)
        run: python -m build

      - name: Create ~/.pypirc for Azure DevOps
        run: |
          cat > ~/.pypirc <<EOF
          [distutils]
          index-servers = azure

          [azure]
          repository: https://pkgs.dev.azure.com/${{ secrets.AZDO_ORG }}/${{ secrets.AZDO_PROJECT }}/_packaging/${{ secrets.AZDO_FEED }}/pypi/upload/
          username: azdo
          password: ${{ secrets.AZDO_PAT }}
          EOF
          chmod 600 ~/.pypirc

      - name: Publish to Azure DevOps Feed
        run: twine upload --repository azure dist/*

      - name: (Optional) Test install from feed
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install --index-url https://pkgs.dev.azure.com/${{ secrets.AZDO_ORG }}/${{ secrets.AZDO_PROJECT }}/_packaging/${{ secrets.AZDO_FEED }}/pypi/simple/ my-python-package==0.1.0

      - name: Upload built artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: dist-artifacts
          path: dist/*
